# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3.2.0
        with:
          # Optional SDK version(s) to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x, 3.x, 6.0.2xx
          dotnet-version: 7.0.1xx
      - name: dotnet build
        run: dotnet build -c release

      - name: docker build
        run: docker build -t psaksimg:'${{github.sha}}' .

      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.ACR_LOGIN }}
          password: ${{ secrets.ACR_PASSWORD }}
          login-server: ${{secrets.ACR_LOGIN_SERVER}}

      # - name: docker login
      #   run: docker login --username '${{ secrets.DOCKER_LOGIN }}' --password '${{ secrets.DOCKER_PASSWORD }}'

      - name: tag docker image
        run: docker tag psaksimg:${{github.sha}} ${{vars.VAR_ACR_LOGIN_SERVER}}/psaksimg:${{github.sha}}

      - name: push docker image
        run: docker push ${{vars.VAR_ACR_LOGIN_SERVER}}/psaksimg:${{github.sha}}

      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v3
        with:
          resource-group: ps-kubernetes2
          cluster-name: PsAzAksPoc

      - name: Create secret in Kubernetes cluster
        uses: Azure/k8s-create-secret@v4.0
        with:
          namespace: default
          secret-name: acr-image-pull-secret
          container-registry-url: "psazappcontainer.azurecr.io"
          container-registry-username: ${{ secrets.ACR_LOGIN }}
          container-registry-password: ${{ secrets.ACR_PASSWORD }}

      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v4.9
        with:
          manifests: k8s/deployment.yml
            k8s/service.yml
          images: "${{vars.VAR_ACR_LOGIN_SERVER}}/psaksimg:${{github.sha}}"
          imagepullsecrets: acr-image-pull-secret
          pull-images: true # default is true
          strategy: basic # default is basic
          action: deploy # default is deploy
          # Deploy when a previous deployment already exists. If true then --force argument is added to the apply command
          force: false
          token: ${{ github.token }} # default is ${{ github.token }}
          # Name of resource group - Only required if using private cluster
          resource-group: ps-kubernetes2
          # Resource group name - Only required if using private cluster
          name: ps-kubernetes2
